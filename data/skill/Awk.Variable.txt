[{TableOfContents }]

!!!AWK变量
AWK中的变量可以是标量（scalars）、数组（array elements）、字段变量（fields）和特殊变量。变量名称不能以数字开始。

AWK中的变量不需要在使用前先进行申明，变量可以具有数字值和/或字符串值，并根据上下文的不同而呈现出数字或字符串。

未初始化的标量变量和数组元素具有一个为0的数字值和一个为空串（””）的字符串值。

!! 1. 特殊变量
AWK 自定义的特殊变量：
|| 变量名 || 含义
| ARGC | 输入参数的个数，等同于C语言中的 argc，此值可以改变
| ARGV | 输入参数数组，等同于C语言中的 argv
| CONVFMT | AWK内部运算时，将数字转换成字符串的 printf 格式。缺省值为”%.6g” 。
| ENVIRON | 表示AWK运行环境的数组。使用 ENVIRON[[“环境变量名”] 来访问某一环境变量的值。如： editor = ENVIRON[[“EDITOR”] 。如果访问了不存在的环境变量，则返回一个空串。
| FILENAME | AWK 当前处理的文件名
| FNR | 当前处理文件的当前记录数
| FS | 输入文件的字段分隔符，可以为单个字符，也可以是一个字符串。缺省值是（任意数目的）space （空格或跳格）。FS可以被指定为：\\1、单个字符：此时，字段由该字符的每个具体值隔开。如，指定为字符 “~|”，则每记录中每个 ~| 都被认为是分隔符。两个相邻的 ~| ，被认为是一个空字段。\\2、一个扩展正则表达式：字段由与扩展正则表达式匹配的每个序列的具体值隔开。这样，缺省的FS，可以被理解为： FS = “( ~|\t)+” \\除了在脚本中显示的指定外，还可以通过AWK的启动参数 -Ffs 来指定FS为 fs 所表示的正则表达式。
| NF | 当前记录的字段个数，最大值为99 。
| NR | 已读出的记录数，如果只是处理一个文件，则NR = FNR ，如果处理多个文件， NR >= FNR 。在BEGIN操作中，NR的值为0，在END操作中，NR的值为最后处理的记录的值。
| OFMT | 在输出语句中将数字转换为字符串的printf格式。缺省值为”%.6g” 。
| OFS | 输出文件的字段分隔符，可以为单个字符，也可以是一个字符串，缺省为空格
| ORS | 输出文件的记录分隔符，缺省为换行(\n)
| RLENGTH | 由match函数来匹配的字符串的长度。（参见 match 函数的描述）
| RS | 输入文件的记录分隔符，缺省为换行(\n) (RS只有第一字符是是有效的，其它字符会被忽略)
| RSTART | 由 match 函数所匹配的字符串的起始位置，从1 开始编号。变量的值总是和 match 函数的返回值相同。（参见 match 函数的描述）
| SUBSEP | 多维数组中的下标分隔符。缺省值是"\034"。（详见“数组变量”的介绍）


!! 2. 标量变量
在AWK中，变量不需要先申明，直接对其赋值，然后就使用。如：
{{{
{
   abc = 1;
   print abc
}
}}}
将数字 1 赋值给变量 abc。

!! 3. 数组变量
! 3.1. 概念介绍
数组初始为空且大小可以动态改变（类似于C++中的vector）。数组由一个变量名和在[]（方括号）中的下标来标示。下标可以是数字，也可以是字符串。

数组可以用一个以上的下标来建立索引，以实现多维数组。AWK中数组实际上是一维的，通过串联各个独立表达式的字符串值（各字符串由特殊变量 SUBSEP 的值隔开）来将逗号隔开的下标转换成为单个字符串上，所以，下面两个索引操作是等同的：
{{{
x[expr1,expr2,...exprn]
}}}
和
{{{
x[expr1SUBSEPexpr2SUBSEP...exprn]
}}}
当使用 in 运算符时，一个多维 Index 值应包含在圆括号之中，除了 in 运算符，任何对不存在的数组元素的引用将自动创建该元素。

! 3.2. 运用举例
赋值：
{{{
person[person_num, "name"] = "Jack"
person[person_num, "age"] = "11"
person_num++
}}}
上面的代码中，对一个二维数组“person”进行赋值。

!! 4. 字段变量
当AWK将一条记录分隔成多个字段后，可以通过 $1、$2 …… 来访问每一个字段（$1 表示第一个字段，依次类推）。$0 则表示整个记录。

将一个值指定给不存在的字段（即任何大于$NF字段变量的当前值的字段）将会导致：
# 创建新的字段变量
# 修改NF的值
# 修改$0的值
假设当前输入记录为 “1|2|3|4|”，FS和OFS都为“|”，这时，字段数为4（NF为4），如果执行了 $10 = “abc”，则会：创建$5、$6、$7、$8、$9、$10这几个变量，其中，除了 $10 为指定的值”abc”以外，其它变量（$5 到 $9）都是空串。NF被AWK修改为10，$0也被修改为从$1到$10对应的值，为1|2|3|4||||||abc

