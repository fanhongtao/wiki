
dos2unix, unix2dos 用来实现 DOS <=> UNIX text file 转换 

* OS(Windows) 文本文件以'0d 0a'结尾，   
* UNIX(Linux) 文本文件以'0a'结尾。

! dos2unix
如果在Linux系统下没有安装 dos2unix 工具，可以采用以下的脚本来实现转换功能：
{{{sed -i'' "s/\r//" file}}}
或
{{{cat file | col -b > newfile}}}
或
{{{cat file | tr -d "\r" > newfile}}}
或
{{{cat file | tr -d "\015" > newfile}}}

! unix2dos
{{{sed -i'' "s/$/\r/" file}}}
或
{{{sed -i'' "s/$/\x0d/" file}}}

%%information
-i后面的是单引号组成
%%

以上适用 GNU sed, FreeBSD 下的 sed 不适用

!!背景介绍

* “回车”（carriage return），也表示为 CR 或 '\r' ，十进制ASCII代码是13，十六进制代码为0x0D; 
* “换行”（line feed），也表示为 LF 或 '\n'， ASCII代码是10，十六制为0x0A 。

在计算机还没有出现之前，有一种叫做电传打字机（Teletype Model 33）的玩意，每秒钟可以打10个字符。但是它有一个问题，就是打完一行换行的时候，要用去0.2秒，正好可以打两个字符。要是在这0.2秒里面，又有新的字符传过来，那么这个字符将丢失。

于是，研制人员想了个办法解决这个问题，就是在每行后面加两个表示结束的字符。一个叫做“回车”，告诉打字机把打印头定位在左边界；另一个叫做“换行”，告诉打字机把纸向下移一行。

这就是“换行”和“回车”的来历，从它们的英语名字上也可以看出一二。

后来，计算机发明了，这两个概念也就被般到了计算机上。那时，存储器很贵，一些科学家认为在每行结尾加两个字符太浪费了，加一个就可以。于是，就出现了分歧：
* Unix系统里，每行结尾只有“<换行>”，即“\n”；
* Windows系统里面，每行结尾是“<回车><换行>”，即“\r\n”；
* Mac系统里，每行结尾是“<回车>”，即“\r”。

一个直接后果是，Unix/Mac系统下的文件在Windows里打开的话，所有文字会变成一行；而Windows里的文件在Unix/Mac下打开的话，在每行的结尾可能会多出一个^M符号。

在不同平台间使用FTP软件传送文件时，在ascii文本模式传输模式下，FTP客户端程序会自动对换行格式进行转换。 经过这种传输的文件字节数可能会发生变化。 如果你不想ftp修改原文件, 可以使用bin模式(二进制模式)传输文本。
