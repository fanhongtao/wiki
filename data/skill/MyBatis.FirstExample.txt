[{TableOfContents }] \\

!!!一个使用MyBatis的例子
假设我们想要开发一个学生管理系统，该系统目前只有一张名为student的表，表结构如下：
{{{
CREATE TABLE STUDENT
(
   ID                   INT NOT NULL,
   NAME                 VARCHAR(32) NOT NULL,
   BIRTHDAY             DATE NOT NULL,
   PRIMARY KEY (ID)
);
}}}


!!下载MyBatis版本
从[Google Code|http://code.google.com/p/mybatis/]下载最新的MyBatis版本 3.0.2。下文将以此版本进行描述。

!!编写配置文件
为了便于配置所要连接的数据库，需要先编写一个 database.properties 的配置文件，内容如下：
{{{
driver=org.h2.Driver
url=jdbc:h2:tcp://localhost/student
username=sa
password=
}}}

!!配置Mapper
MyBatis使用XML格式的配置文件，通常命名为 MapperConfig.xml，内容如下：
%%prettify 
{{{
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration 
    PUBLIC "-//mybatis.org//DTD Config 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-config.dtd">  
<configuration>
    <properties resource="dharma/persistence/database.properties"/>
    
    <typeAliases>
        <typeAlias alias="Operator" type="dharma.persistence.bean.Student"/>
    </typeAliases>
    
    <environments default="development"> 
        <environment id="development"> 
            <transactionManager type="JDBC"/> 
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/> 
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/> 
                <property name="password" value="${password}"/> 
            </dataSource>
        </environment>
    </environments>
    
    <mappers>
        <mapper resource="fht/persistence/xml/StudentMapper.xml"/> 
    </mappers>
</configuration>
}}}
/%
其中，
* properties属性用于指定配置要读配置文件，
* typeAliases用于定义在 Mapper.xml 中会使用到的类型
* environments用于配置所要连接的数据库
* mappers用于配置需要加载的 Mapper.xml 文件




