!!!Capture Filter
Capture Filter(捕捉过滤器)

Wireshark 采用和 Tcpdump 相同的语法，详细的描述可以参考 [Tcpdump手册|http://www.tcpdump.org/tcpdump_man.html] 或 Wireshark网站[关于Tcpdump的描述|http://www.ethereal.com/docs/man-pages/tcpdump.8.html]。

Filter语法
{{{
[not] primitive [and|or [not] primitive ...]
}}}

primitive语法
{{{
[Protocol] [Direction] [Type]
}}}
primitive最多可由三个部分组成，至少必须有一个部分。

Primitives usually consist of an id (name or number) preceded by one or more qualifiers. There are three different kinds of qualifier: 
! Protocol（协议）:
可能的值: __ether__, __fddi__, __ip__, __arp__, __rarp__, __decnet__, __lat__, __sca__, __moprc__, __mopdl__, __tcp__ 和 __udp__ 。如：`ether src foo', `arp net 128.3', `tcp port 21'。\\
如果没有特别指明是什么协议，则默认为所有与 Type 匹配的协议。如：`src foo' means `(ip or arp or rarp) src foo' (except the latter is not legal syntax),`net bar' means `(ip or arp or rarp) net bar' and `port 53' means `(tcp or udp) port 53'。 

! Direction（方向）:
可能的值: __src__, __dst__, __src or dst__ 和 __src and dst__ 。\\
如果没有特别指明来源或目的地，则默认使用 "src or dst" 作为关键字。\\
例如，"host 10.1.1.1"与"src or dst host 10.1.1.1"是一样的。

! Type（类型）:
可能的值：__host__, __net__ 和 __port__。如：`host foo', `net 128.3', `port 20'.\\
如果没有指定此值，则默认使用"host"关键字。\\
例如，"10.1.1.1" 与"host 10.1.1.1"相同。

----
举例：
* host 192.168.0.228
抓取与服务器 192.168.0.228 之间的所有包；

* tcp port 8083
抓取TCP端口 8083 的所有包；

-----
注意事项：

当使用关键字作为值时，需使用反斜杠“\”。

"ether proto \ip" (与关键字"ip"相同)。这样写将会以IP协议作为目标。

"ip proto \icmp" (与关键字"icmp"相同)。这样写将会以ping工具常用的icmp作为目标。

可以在"ip"或"ether"后面使用"multicast"及"broadcast"关键字。当您想排除广播请求时，"no broadcast"就会非常有用。

----
Back to [Wireshark]
