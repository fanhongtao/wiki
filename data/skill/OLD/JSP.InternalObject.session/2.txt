!!!session对象

1.什么是session：session对象是一个JSP内置对象，它在第一个JSP页面被装载时自动创建，完成会话期管理。

从一个客户打开浏览器并连接到服务器开始，到客户关闭浏览器离开这个服务器结束，被称为一个会话。当一个客户访问一个服务器时，可能会在这个服务器的几个页面之间反复连接，反复刷新一个页面，服务器应当通过某种办法知道这是同一个客户，这就需要 session对象。

2．session对象的ID：当一个客户首次访问服务器上的一个JSP页面时，JSP引擎产生一个session对象，同时分配一个String类型的ID号，JSP引擎同时将这个ID号发送到客户端，存放在Cookie中，这样session 对象和客户之间就建立了一一对应的关系。当客户再访问连接该服务器的其他页面时，不再分配给客户新的session对象，直到客户关闭浏览器后，服务器端该客户的session对象才取消，并且和客户的会话对应关系消失。当客户重新打开浏览器再连接到该服务器时，服务器为该客户再创建一个新的 session对象。

3.session对象存在一定时间过期问题，所以存在session中的名值对会在一定时间后失去，可以通过更改session有效时间来避免这种情况。同时编程时尽量避免将大量有效信息存储在session中，request是一个不错的替代对象。

----

session对象表示目前个别用户的会话(session)状况。

session对象实现javax.servlet.http.HttpSession接口，HttpSession接口所提供的方法

!!1.储存和取得属性方法

|| 方法 || 描述
| Enumeration getAttributeNames() | 取得所有属性名称
| Object getAttribute(String name) | 取得name 属性的值
| void removeAttribute(String name) | 移除name 属性的值
| void setAttribute(String name, Object value) | 设定name属性的值为value

!!2.其它方法

|| 方法 || 描述
| long getCreationTime() | 取得session产生的时间，单位是毫秒
| String getId() | 取得session 的ID
| long getLastAccessedTime() | 取得用户最后通过这个session送出请求的时间
| long getMaxInactiveInterval() | 取得最大session不活动的时间，若超过这时间，session 将会失效
| void invalidate() | 取消session对象，并将对象存放的内容完全抛弃
| boolean isNew() | 判断session是否为"新"的
| void setMaxInactiveInterval(int interval) | 设定最大session不活动的时间，若超过这时间，session 将会失效

----
Back to [JSP.InternalObject]
